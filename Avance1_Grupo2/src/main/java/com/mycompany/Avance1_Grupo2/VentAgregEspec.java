/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.mycompany.Avance1_Grupo2;

import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author hhern
 */
public class VentAgregEspec extends javax.swing.JInternalFrame {

    static MecanicaBasica mb = new MecanicaBasica();
    static MecanicaDiesel md = new MecanicaDiesel();
    static MecanicaGasolina mg = new MecanicaGasolina();
    static MecanicaElectricos me = new MecanicaElectricos();
    static MecanicaPesada mp = new MecanicaPesada();
    static MecanicaMotos mm = new MecanicaMotos();

    public VentAgregEspec() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Especialidades = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        placaBusc = new javax.swing.JComboBox<>();
        mecBusc = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        servBusc = new javax.swing.JComboBox<>();
        subBusc = new javax.swing.JComboBox<>();
        jButton5 = new javax.swing.JButton();
        finalLabel = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Agregar clientes a especialidades");

        Especialidades.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Especialidades.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mecanica Basica", "Mecanica automotores diesel", "Mecanica automotores gasolina", "Mecanica automotores electricos", "Mecanica de maquinaria pesada", "Mecanica de motos" }));
        Especialidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EspecialidadesActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setText("Busqueda de Placas:");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setText("Busqueda de mecanicos:");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        placaBusc.setEditable(true);
        placaBusc.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        placaBusc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placaBuscActionPerformed(evt);
            }
        });

        mecBusc.setEditable(true);
        mecBusc.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setText("Busqueda de servicios:");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton4.setText("Busqueda de Subservicios:");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        servBusc.setEditable(true);
        servBusc.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        subBusc.setEditable(true);
        subBusc.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton5.setText("Guardar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(finalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                        .addComponent(jButton5)
                        .addGap(44, 44, 44))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4)
                            .addComponent(jButton3)
                            .addComponent(jButton1)
                            .addComponent(jButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(placaBusc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Especialidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mecBusc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(servBusc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subBusc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(Especialidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(placaBusc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(mecBusc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(servBusc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(subBusc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(finalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EspecialidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EspecialidadesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EspecialidadesActionPerformed

    private void placaBuscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placaBuscActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_placaBuscActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        placaBusc.removeAllItems();
        for (int i = 0; i < Vehiculos.getAutos().size(); i++) {
            placaBusc.addItem(Vehiculos.getAutos().get(i).getPlaca());
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (Especialidades.getSelectedItem().toString().equalsIgnoreCase("Mecanica Basica")) {
            mecBusc.removeAllItems();
            for (int i = 0; i < Mecanicos.getMecBasica().size(); i++) {
                mecBusc.addItem(Mecanicos.getMecBasica().get(i).getNombre());
            }
        } else if (Especialidades.getSelectedItem().toString().equalsIgnoreCase("Mecanica automotores diesel")) {
            mecBusc.removeAllItems();
            for (int i = 0; i < Mecanicos.getMecDiesel().size(); i++) {
                mecBusc.addItem(Mecanicos.getMecDiesel().get(i).getNombre());
            }
        } else if (Especialidades.getSelectedItem().toString().equalsIgnoreCase("Mecanica automotores gasolina")) {
            mecBusc.removeAllItems();
            for (int i = 0; i < Mecanicos.getMecGasolina().size(); i++) {
                mecBusc.addItem(Mecanicos.getMecGasolina().get(i).getNombre());
            }
        } else if (Especialidades.getSelectedItem().toString().equalsIgnoreCase("Mecanica automotores electricos")) {
            mecBusc.removeAllItems();
            for (int i = 0; i < Mecanicos.getMecElectricos().size(); i++) {
                mecBusc.addItem(Mecanicos.getMecElectricos().get(i).getNombre());
            }
        } else if (Especialidades.getSelectedItem().toString().equalsIgnoreCase("Mecanica de maquinaria pesada")) {
            mecBusc.removeAllItems();
            for (int i = 0; i < Mecanicos.getMecPesada().size(); i++) {
                mecBusc.addItem(Mecanicos.getMecPesada().get(i).getNombre());
            }
        } else if (Especialidades.getSelectedItem().toString().equalsIgnoreCase("Mecanica de motos")) {
            mecBusc.removeAllItems();
            for (int i = 0; i < Mecanicos.getMecMotos().size(); i++) {
                mecBusc.addItem(Mecanicos.getMecMotos().get(i).getNombre());
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (Especialidades.getSelectedItem().toString().equalsIgnoreCase("Mecanica Basica")) {
            servBusc.removeAllItems();
            String[] newItems = {"Cambio de aceite y filtros", "Cambio de bujias", "Cambio de llantas", "Revision de frenos", "Revision de luces"};
            servBusc.setModel(new DefaultComboBoxModel<>(newItems));
        } else if (Especialidades.getSelectedItem().toString().equalsIgnoreCase("Mecanica automotores diesel")) {
            servBusc.removeAllItems();
            String[] newItems = {"Revision de motor", "Tune up", "Desgastes mecanicos", "Sistemas electricos"};
            servBusc.setModel(new DefaultComboBoxModel<>(newItems));
        } else if (Especialidades.getSelectedItem().toString().equalsIgnoreCase("Mecanica automotores gasolina")) {
            servBusc.removeAllItems();
            String[] newItems = {"Revision de motor", "Tune up", "Desgaste mecanico", "Sistemas electricos", "Cambio de roles", "Cambio de caja de cambios"};
            servBusc.setModel(new DefaultComboBoxModel<>(newItems));
        } else if (Especialidades.getSelectedItem().toString().equalsIgnoreCase("Mecanica automotores electricos")) {
            servBusc.removeAllItems();
            String[] newItems = {"Sistema electrico y auxiliares", "Bateria", "Revision de frenos", "Cambio de roles"};
            servBusc.setModel(new DefaultComboBoxModel<>(newItems));
        } else if (Especialidades.getSelectedItem().toString().equalsIgnoreCase("Mecanica de maquinaria pesada")) {
            servBusc.removeAllItems();
            String[] newItems = {"Mantenimientos", "Reparacion", "Transmisiones", "Propulsion", "Electrico", "Chasis"};
            servBusc.setModel(new DefaultComboBoxModel<>(newItems));
        } else if (Especialidades.getSelectedItem().toString().equalsIgnoreCase("Mecanica de motos")) {
            servBusc.removeAllItems();
            String[] newItems = {"Diagnosticar", "Reparar componentes", "Sistema de lubricación y refrigeración", "Sistema de combustible", "Sistema de encendido", "Sistema de frenos", "Sistema de dirección", "Sistema de suspensión", "Transmisión", "Carga eléctrica"};
            servBusc.setModel(new DefaultComboBoxModel<>(newItems));
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (Especialidades.getSelectedItem().toString().equalsIgnoreCase("Mecanica Basica")) {
            if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Cambio de aceite y filtros")) {
                subBusc.removeAllItems();
                String[] newItems = {"Motor", "Caja", "Hidraulico"};
                subBusc.setModel(new DefaultComboBoxModel<>(newItems));
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Cambio de llantas")) {
                subBusc.removeAllItems();
                String[] newItems = {"Llantas nuevas", "Balanceo", "Tramado"};
                subBusc.setModel(new DefaultComboBoxModel<>(newItems));
            } else {
                subBusc.removeAllItems();
            }
        } else if (Especialidades.getSelectedItem().toString().equalsIgnoreCase("Mecanica automotores diesel")) {
            subBusc.removeAllItems();
        } else if (Especialidades.getSelectedItem().toString().equalsIgnoreCase("Mecanica automotores gasolina")) {
            if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Cambio de caja de cambios")) {
                subBusc.removeAllItems();
                String[] newItems = {"Caja manual", "Caja automatica"};
                subBusc.setModel(new DefaultComboBoxModel<>(newItems));
            } else {
                subBusc.removeAllItems();
            }
        } else if (Especialidades.getSelectedItem().toString().equalsIgnoreCase("Mecanica automotores electricos")) {
            subBusc.removeAllItems();
        } else if (Especialidades.getSelectedItem().toString().equalsIgnoreCase("Mecanica de maquinaria pesada")) {
            subBusc.removeAllItems();
        } else if (Especialidades.getSelectedItem().toString().equalsIgnoreCase("Mecanica de motos")) {
            subBusc.removeAllItems();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (Especialidades.getSelectedItem().toString().equalsIgnoreCase("Mecanica Basica")) {
            mb.setEspecialidad("Mecanica Basica");
            for (int i = 0; i < Vehiculos.getAutos().size(); i++) {
                if (placaBusc.getSelectedItem().toString().equalsIgnoreCase(Vehiculos.getAutos().get(i).getPlaca())) {
                    mb.setPlaca(Vehiculos.getAutos().get(i).getPlaca());
                    mb.setNombreCliente(Vehiculos.getAutos().get(i).getNombre());
                }
            }
            for (int i = 0; i < Mecanicos.getMecBasica().size(); i++) {
                if (mecBusc.getSelectedItem().toString().equalsIgnoreCase(Mecanicos.getMecBasica().get(i).getNombre())) {
                    mb.setNombreMec(Mecanicos.getMecBasica().get(i).getNombre());
                }
            }
            if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Cambio de aceite y filtros")) {
                if (subBusc.getSelectedItem().toString().equalsIgnoreCase("Motor")) {
                    mb.setSubEspec("Cambio de aceite y filtros: Motor");
                    mb.setValorRep(35000);
                } else if (subBusc.getSelectedItem().toString().equalsIgnoreCase("Caja")) {
                    mb.setSubEspec("Cambio de aceite y filtros: Caja de cambios");
                    mb.setValorRep(25000);
                } else if (subBusc.getSelectedItem().toString().equalsIgnoreCase("Hidraulico")) {
                    mb.setSubEspec("Cambio de aceite y filtros: Caja de direccion");
                    mb.setValorRep(20000);
                }
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Cambio de bujias")) {
                mb.setSubEspec("Cambio de bujias");
                mb.setValorRep(40000);
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Cambio de llantas")) {
                if (subBusc.getSelectedItem().toString().equalsIgnoreCase("Llantas nuevas")) {
                    mb.setSubEspec("Cambio de Llantas: Llantas nuevas");
                    mb.setValorRep(230000);
                } else if (subBusc.getSelectedItem().toString().equalsIgnoreCase("Balanceo")) {
                    mb.setSubEspec("Cambio de Llantas: Balanceo");
                    mb.setValorRep(23000);
                } else if (subBusc.getSelectedItem().toString().equalsIgnoreCase("Tramado")) {
                    mb.setSubEspec("Cambio de Llantas: Tramado");
                    mb.setValorRep(23000);
                }
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Revision de frenos")) {
                mb.setSubEspec("Revision de frenos");
                mb.setValorRep(46000);
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Revision de luces")) {
                mb.setSubEspec("Revision de luces");
                mb.setValorRep(50000);
            }
            MecanicaBasica.getMecBasica().add(mb);
            mb = new MecanicaBasica();
            placaBusc.removeAllItems();
            mecBusc.removeAllItems();
            servBusc.removeAllItems();
            subBusc.removeAllItems();
            finalLabel.setText("Se ha agregado correctamente");
        } else if (Especialidades.getSelectedItem().toString().equalsIgnoreCase("Mecanica automotores diesel")) {
            md.setEspecialidad("Mecanica automotores diesel");
            for (int i = 0; i < Vehiculos.getAutos().size(); i++) {
                if (placaBusc.getSelectedItem().toString().equalsIgnoreCase(Vehiculos.getAutos().get(i).getPlaca())) {
                    md.setPlaca(Vehiculos.getAutos().get(i).getPlaca());
                    md.setNombreCliente(Vehiculos.getAutos().get(i).getNombre());
                }
            }
            for (int i = 0; i < Mecanicos.getMecDiesel().size(); i++) {
                if (mecBusc.getSelectedItem().toString().equalsIgnoreCase(Mecanicos.getMecDiesel().get(i).getNombre())) {
                    md.setNombreMec(Mecanicos.getMecDiesel().get(i).getNombre());
                }
            }
            if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Revision de motor")) {
                md.setSubEspec("Revision de motor");
                md.setValorRep(60000);
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Tune up")) {
                md.setSubEspec("Tune up");
                md.setValorRep(100000);
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Desgastes mecanicos")) {
                md.setSubEspec("Desgastes mecanicos");
                md.setValorRep(200000);
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Sistemas electricos")) {
                md.setSubEspec("Sistemas electricos");
                md.setValorRep(80000);
            }
            MecanicaDiesel.getMecDiesel().add(md);
            md = new MecanicaDiesel();
            placaBusc.removeAllItems();
            mecBusc.removeAllItems();
            servBusc.removeAllItems();
            subBusc.removeAllItems();
            finalLabel.setText("Se ha agregado correctamente");
        } else if (Especialidades.getSelectedItem().toString().equalsIgnoreCase("Mecanica automotores gasolina")) {
            mg.setEspecialidad("Mecanica de automotores gasolina");
            for (int i = 0; i < Vehiculos.getAutos().size(); i++) {
                if (placaBusc.getSelectedItem().toString().equalsIgnoreCase(Vehiculos.getAutos().get(i).getPlaca())) {
                    mg.setPlaca(Vehiculos.getAutos().get(i).getPlaca());
                    mg.setNombreCliente(Vehiculos.getAutos().get(i).getNombre());
                }
            }
            for (int i = 0; i < Mecanicos.getMecGasolina().size(); i++) {
                if (mecBusc.getSelectedItem().toString().equalsIgnoreCase(Mecanicos.getMecGasolina().get(i).getNombre())) {
                    mg.setNombreMec(Mecanicos.getMecGasolina().get(i).getNombre());
                }
            }
            if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Revision de motor")) {
                mg.setSubEspec("Revision de motor");
                mg.setValorRep(60000);
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Tune up")) {
                mg.setSubEspec("Tune up");
                mg.setValorRep(40000);
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Desgaste mecanico")) {
                mg.setSubEspec("Desgaste mecanico");
                mg.setValorRep(40000);
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Sistemas electricos")) {
                mg.setSubEspec("Sistemas electricos");
                mg.setValorRep(76000);
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Cambio de roles")) {
                mg.setSubEspec("Cambio de roles");
                mg.setValorRep(50000);
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Cambio de caja de cambios")) {
                if (subBusc.getSelectedItem().toString().equalsIgnoreCase("Caja manual")) {
                    mg.setSubEspec("Cambio de caja de cambios: Manual");
                    mg.setValorRep(100000);
                }else if (subBusc.getSelectedItem().toString().equalsIgnoreCase("Caja automatica")){
                    mg.setSubEspec("Cambio de caja de cambios: Automatica");
                    mg.setValorRep(100000);
                }
            }
            MecanicaGasolina.getMecGasolina().add(mg);
            mg = new MecanicaGasolina();
            placaBusc.removeAllItems();
            mecBusc.removeAllItems();
            servBusc.removeAllItems();
            subBusc.removeAllItems();
            finalLabel.setText("Se ha agregado correctamente");
        } else if (Especialidades.getSelectedItem().toString().equalsIgnoreCase("Mecanica automotores electricos")) {
            me.setEspecialidad("Mecanica de automotores electricos");
            for (int i = 0; i < Vehiculos.getAutos().size(); i++) {
                if (placaBusc.getSelectedItem().toString().equalsIgnoreCase(Vehiculos.getAutos().get(i).getPlaca())) {
                    me.setPlaca(Vehiculos.getAutos().get(i).getPlaca());
                    me.setNombreCliente(Vehiculos.getAutos().get(i).getNombre());
                }
            }
            for (int i = 0; i < Mecanicos.getMecElectricos().size(); i++) {
                if (mecBusc.getSelectedItem().toString().equalsIgnoreCase(Mecanicos.getMecElectricos().get(i).getNombre())) {
                    me.setNombreMec(Mecanicos.getMecElectricos().get(i).getNombre());
                }
            }
            if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Sistema electrico y auxiliares")) {
                me.setSubEspec("Sistema electrico y auxiliares");
                me.setValorRep(40000);
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Bateria")) {
                me.setSubEspec("Bateria");
                me.setValorRep(40000);
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Revision de frenos")) {
                me.setSubEspec("Revision de frenos");
                me.setValorRep(46000);
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Cambio de roles")) {
                me.setSubEspec("Cambio de roles");
                me.setValorRep(50000);
            }
            MecanicaElectricos.getMecElectricos().add(me);
            me = new MecanicaElectricos();
            placaBusc.removeAllItems();
            mecBusc.removeAllItems();
            servBusc.removeAllItems();
            subBusc.removeAllItems();
            finalLabel.setText("Se ha agregado correctamente");
        } else if (Especialidades.getSelectedItem().toString().equalsIgnoreCase("Mecanica de maquinaria pesada")) {
            mp.setEspecialidad("Mecanica mantenimiento de maquinaria pesada");
            for (int i = 0; i < Vehiculos.getAutos().size(); i++) {
                if (placaBusc.getSelectedItem().toString().equalsIgnoreCase(Vehiculos.getAutos().get(i).getPlaca())) {
                    mp.setPlaca(Vehiculos.getAutos().get(i).getPlaca());
                    mp.setNombreCliente(Vehiculos.getAutos().get(i).getNombre());
                }
            }
            for (int i = 0; i < Mecanicos.getMecPesada().size(); i++) {
                if (mecBusc.getSelectedItem().toString().equalsIgnoreCase(Mecanicos.getMecPesada().get(i).getNombre())) {
                    mp.setNombreMec(Mecanicos.getMecPesada().get(i).getNombre());
                }
            }
            if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Mantenimientos")) {
                mp.setSubEspec("Mantenimientos");
                mp.setValorRep(140000);
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Reparacion")) {
                mp.setSubEspec("Reparacion");
                mp.setValorRep(400000);
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Transmisiones")) {
                mp.setSubEspec("Transmisiones");
                mp.setValorRep(300000);
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Propulsion")) {
                mp.setSubEspec("Propulsion");
                mp.setValorRep(460000);
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Electrico")) {
                mp.setSubEspec("Electrico");
                mp.setValorRep(100000);
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Chasis")) {
                mp.setSubEspec("Chasis");
                mp.setValorRep(150000);
            }
            MecanicaPesada.getMecPesada().add(mp);
            mp = new MecanicaPesada();
            placaBusc.removeAllItems();
            mecBusc.removeAllItems();
            servBusc.removeAllItems();
            subBusc.removeAllItems();
            finalLabel.setText("Se ha agregado correctamente");
        } else if (Especialidades.getSelectedItem().toString().equalsIgnoreCase("Mecanica de motos")) {
            mm.setEspecialidad("Mecanica de Motos");
            for (int i = 0; i < Vehiculos.getAutos().size(); i++) {
                if (placaBusc.getSelectedItem().toString().equalsIgnoreCase(Vehiculos.getAutos().get(i).getPlaca())) {
                    mm.setPlaca(Vehiculos.getAutos().get(i).getPlaca());
                    mm.setNombreCliente(Vehiculos.getAutos().get(i).getNombre());
                }
            }
            for (int i = 0; i < Mecanicos.getMecMotos().size(); i++) {
                if (mecBusc.getSelectedItem().toString().equalsIgnoreCase(Mecanicos.getMecMotos().get(i).getNombre())) {
                    mm.setNombreMec(Mecanicos.getMecMotos().get(i).getNombre());
                }
            }
            if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Diagnosticar")) {
                mm.setSubEspec("Diagnosticar");
                mm.setValorRep(10000);
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Reparar componentes")) {
                mm.setSubEspec("Reparar componentes");
                mm.setValorRep(40000);
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Sistema de lubricación y refrigeración")) {
                mm.setSubEspec("Sistema de lubricación y refrigeración");
                mm.setValorRep(20000);
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Sistema de combustible")) {
                mm.setSubEspec("Sistema de combustible");
                mm.setValorRep(25000);
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Sistema de encendido")) {
                mm.setSubEspec("Sistema de encendido");
                mm.setValorRep(10000);
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Sistema de frenos")) {
                mm.setSubEspec("Sistema de frenos");
                mm.setValorRep(10000);
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Sistema de dirección")) {
                mm.setSubEspec("Sistema de dirección");
                mm.setValorRep(15000);
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Sistema de suspensión")) {
                mm.setSubEspec("Sistema de suspensión");
                mm.setValorRep(10000);
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Transmisión")) {
                mm.setSubEspec("Transmisión");
                mm.setValorRep(30000);
            } else if (servBusc.getSelectedItem().toString().equalsIgnoreCase("Carga eléctrica")) {
                mm.setSubEspec("Carga eléctrica");
                mm.setValorRep(25000);
            }
            MecanicaMotos.getMecMotos().add(mm);
            mm = new MecanicaMotos();
            placaBusc.removeAllItems();
            mecBusc.removeAllItems();
            servBusc.removeAllItems();
            subBusc.removeAllItems();
            finalLabel.setText("Se ha agregado correctamente");
        }
    }//GEN-LAST:event_jButton5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Especialidades;
    private javax.swing.JLabel finalLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> mecBusc;
    private javax.swing.JComboBox<String> placaBusc;
    private javax.swing.JComboBox<String> servBusc;
    private javax.swing.JComboBox<String> subBusc;
    // End of variables declaration//GEN-END:variables
}
